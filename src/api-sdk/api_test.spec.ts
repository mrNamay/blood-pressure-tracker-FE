/**
 * API Documentation
 * API documentation for the application
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("AuthenticationApi", () => {
  let instance: api.AuthenticationApi
  beforeEach(function() {
    instance = new api.AuthenticationApi(config)
  });

  test("apiAuthLoginPost", () => {
    const body: api.AuthLoginBody = undefined
    return expect(instance.apiAuthLoginPost(body, {})).resolves.toBe(null)
  })
  test("apiAuthProfileGet", () => {
    return expect(instance.apiAuthProfileGet({})).resolves.toBe(null)
  })
  test("apiAuthRegisterPost", () => {
    const body: api.AuthRegisterBody = undefined
    return expect(instance.apiAuthRegisterPost(body, {})).resolves.toBe(null)
  })
})

describe("BloodPressureApi", () => {
  let instance: api.BloodPressureApi
  beforeEach(function() {
    instance = new api.BloodPressureApi(config)
  });

  test("apiBloodPressurePost", () => {
    const body: api.ApiBloodpressureBody = undefined
    return expect(instance.apiBloodPressurePost(body, {})).resolves.toBe(null)
  })
  test("apiBloodPressureReadingReadingIdDelete", () => {
    const readingId: string = "readingId_example"
    return expect(instance.apiBloodPressureReadingReadingIdDelete(readingId, {})).resolves.toBe(null)
  })
  test("apiBloodPressureReadingReadingIdGet", () => {
    const readingId: string = "readingId_example"
    return expect(instance.apiBloodPressureReadingReadingIdGet(readingId, {})).resolves.toBe(null)
  })
  test("apiBloodPressureReadingReadingIdPut", () => {
    const body: api.ReadingReadingIdBody = undefined
    const readingId: string = "readingId_example"
    return expect(instance.apiBloodPressureReadingReadingIdPut(body, readingId, {})).resolves.toBe(null)
  })
  test("apiBloodPressureUserIdAveragesGet", () => {
    const userId: string = "userId_example"
    const startDate: string = 2013-10-20
    const endDate: string = 2013-10-20
    return expect(instance.apiBloodPressureUserIdAveragesGet(userId, startDate, endDate, {})).resolves.toBe(null)
  })
  test("apiBloodPressureUserIdGet", () => {
    const userId: string = "userId_example"
    const startDate: string = 2013-10-20
    const endDate: string = 2013-10-20
    return expect(instance.apiBloodPressureUserIdGet(userId, startDate, endDate, {})).resolves.toBe(null)
  })
})

